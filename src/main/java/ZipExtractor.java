import java.io.*;
import java.util.zip.*;

public class ZipExtractor {
    public static void extract(File zipFile, File destDir) throws IOException {
        if (!destDir.exists()) {
            destDir.mkdirs();
        }

        try (ZipInputStream zipIn = new ZipInputStream(new FileInputStream(zipFile))) {
            ZipEntry entry;

            while ((entry = zipIn.getNextEntry()) != null) {
                String entryName = entry.getName();
                File filePath = new File(destDir, entryName);

                System.out.println("üëâ ƒêang x·ª≠ l√Ω: " + entryName);

                try {
                    if (entry.isDirectory()) {
                        filePath.mkdirs();
                    } else {
                        // T·∫°o th∆∞ m·ª•c CHA n·∫øu ch∆∞a c√≥ th∆∞ m·ª•c ƒë·∫•y
                        File parent = filePath.getParentFile();
                        if (!parent.exists()) {
                            parent.mkdirs();
                        }

                        // Ghi file ra ƒëƒ©a
                        try (BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(filePath))) {
                            byte[] buffer = new byte[4096];
                            int len;
                            while ((len = zipIn.read(buffer)) > 0) {
                                bos.write(buffer, 0, len);
                            }
                        }

                        System.out.println("‚úÖ ƒê√£ ghi: " + filePath.getAbsolutePath());
                    }
                } catch (Exception ex) {
                    System.err.println("‚ùå L·ªói t·∫°i: " + filePath.getAbsolutePath());
                    ex.printStackTrace();
                    throw new IOException("Kh√¥ng th·ªÉ gi·∫£i n√©n file: " + filePath.getAbsolutePath() + "\nL√Ω do: " + ex.getMessage());
                }

                zipIn.closeEntry();
            }
        }
    }
}
